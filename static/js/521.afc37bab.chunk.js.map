{"version":3,"file":"static/js/521.afc37bab.chunk.js","mappings":"kPAAMA,EAAc,SAEb,SAASC,EAAaC,GACzB,IAAAC,EAAeD,EAAME,QAAQ,GAAGC,MAAM,KAAIC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAnCK,EAACF,EAAA,GAAEG,EAACH,EAAA,GAEX,OACII,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,UAAAD,SAASJ,IACR,KACDK,EAAAA,EAAAA,KAAA,QAAAD,SAAOH,IACNT,IAGb,CCRO,IAAMc,GAAeC,EAAAA,EAAAA,eAGzB,CAAC,GAAIC,IAED,SAASC,EAAaC,GAAmC,IAAhCN,EAAQM,EAARN,SAK5B,OAJAO,EAAAA,EAAAA,YAAU,WACNC,QAAQC,IAAI,wBAChB,GAAG,KAGCR,EAAAA,EAAAA,KAACC,EAAaQ,SAAQ,CAACpB,OAAOqB,EAAAA,EAAAA,UAC1BC,KAAKC,MAAM,GAADC,OAAIC,aAAaC,QAAQ,WAAc,IACnDhB,SACGA,GAGb,CAEO,SAASiB,EAASC,GACrB,IAAAC,GAA0BC,EAAAA,EAAAA,YAAWlB,GAAamB,GAAA1B,EAAAA,EAAAA,GAAAwB,EAAA,GAA3CG,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAA0EC,IAAlEC,EAAIF,EAAJE,KAAMC,EAAYH,EAAZG,aAAcC,EAASJ,EAATI,UAAWC,EAAgBL,EAAhBK,iBAAkBC,EAAYN,EAAZM,aACnDC,EAAaL,EAEfM,EAAuB,QAATd,EAAiBI,EAC7BA,EAAMW,QAAO,SAAAC,GACX,OAD2BA,EAAJR,OACPK,CACpB,IA4BJ,OA1BIJ,IACAK,EAAcG,MAAMC,KCnCrB,SAAoBC,EAAWC,GAClC,IAAMC,EAAM,IAAIC,IAUhB,OATAH,EAAKI,SAAQ,SAACC,GACV,IAAMC,EAAML,EAAUI,GAChBE,EAAaL,EAAIM,IAAIF,GACtBC,EAGDA,EAAWE,KAAKJ,GAFhBH,EAAIQ,IAAIJ,EAAK,CAACD,GAItB,IACOH,CACX,CDuBiCS,CAAQhB,GAAa,SAAUU,GACpD,OAAOA,EAAKO,KAChB,KAAIV,KAAI,SAAAW,GACJ,OADwBvD,EAAAA,EAAAA,GAAAuD,EAAA,GAAH,EAEzB,IAAGC,QAGHvB,IACAI,EAAcG,MAAMC,KAAKJ,GAAaoB,MAAK,SAAUxD,EAAGC,GACpD,OAAOA,EAAEwD,IAAMzD,EAAEyD,GACrB,KAGAxB,IACAG,EAAcA,EAAYC,QAAO,SAAUS,GACvC,OAAOA,EAAKY,IAChB,KAGAxB,IACAE,EAAcA,EAAYC,QAAO,SAAUS,GACvC,OAAQA,EAAKa,MACjB,KAGG,CAACvB,EAAaT,EACzB,CAEO,SAASiC,EAAQC,GACpB,OAAOrC,EAAAA,EAAAA,YAAWlB,GAAc,GAAGwD,MAAK,SAAAC,GAA2B,IAAXC,EAAMD,EAAVF,GAChD,OAAOA,IAAOG,CAClB,GACJ,CAEO,SAASC,EAAUvC,GACtBP,aAAa+C,QAAQ,OAAQlD,KAAKmD,UAAUzC,GAChD,CE7DO,IAEM0C,GAAMC,EAAAA,EAAAA,aAAqC,SAAA3D,EAA6B4D,GAAM,IAAvBT,EAAEnD,EAAFmD,GAAIU,EAAS7D,EAAT6D,UACpEC,EAA4CZ,EAAQC,GAA5CY,EAAKD,EAALC,MAAOhB,EAAGe,EAAHf,IAAKJ,EAAKmB,EAALnB,MAAOM,EAAMa,EAANb,OAAQD,EAAIc,EAAJd,KAEnC,OACIxD,EAAAA,EAAAA,MAAA,OAAKoE,IAAKA,EAAKC,WAAWG,EAAAA,EAAAA,GACtBH,EACA,iEACA,WACA,6DACA,kBACA,0BACAlB,GAAgB,IAClBjD,SAAA,CACGsD,IACGrD,EAAAA,EAAAA,KAAA,OAAKkE,WAAWG,EAAAA,EAAAA,GACZ,mCACA,MACA,+CACA,wCAGRrE,EAAAA,EAAAA,KAAA,OAAKkE,WAAWG,EAAAA,EAAAA,GAAG,4BAA6Bf,GAAU,gBAAgBvD,SACrEqE,KAELpE,EAAAA,EAAAA,KAAA,QAAMkE,WAAWG,EAAAA,EAAAA,GAAG,4BAA6Bf,GAAU,gBAAgBvD,SACtEX,EAAagE,OAI9B,ICnCakB,EAAY,CACrBC,KAAM,QAeH,SAASC,EAAOnE,GAAsC,IAAnCmD,EAAEnD,EAAFmD,GAAIiB,EAAKpE,EAALoE,MAAOC,EAAQrE,EAARqE,SAC3BT,GAAMU,EAAAA,EAAAA,QAAuB,MACnCC,GAAiBC,EAAAA,EAAAA,GAA0D,CACvEC,OAAQR,EAAUC,KAClBQ,QAAO,SAACC,GACJ,MAAO,CACHC,UAAWD,EAAQE,eAE3B,EACAC,MAAK,SAAC1C,EAAgBuC,GAAU,IAADI,EAC3B,GAAKnB,EAAIoB,QAAT,CAGA,IAAMC,EAAY7C,EAAKgC,MACjBc,EAAad,EACnB,GAAIa,IAAcC,EAAlB,CAGA,IAAMC,EAA+B,QAAdJ,EAAGnB,EAAIoB,eAAO,IAAAD,OAAA,EAAXA,EAAaK,wBACjCC,GAAgBF,EAAkBG,OAASH,EAAkBI,KAAO,EAEpEC,EADeb,EAAQc,kBACkBC,EAAIP,EAAkBI,IACjEN,EAAYC,GAAcM,EAAeH,GAGzCJ,EAAYC,GAAcM,EAAeH,IAG7ChB,EAASY,EAAWC,GACpB9C,EAAKgC,MAAQc,EAZb,CALA,CAkBJ,IA5BKS,GA6BPtG,EAAAA,EAAAA,GAAAkF,EAAA,GA7BW,GA8BbqB,GAA+BC,EAAAA,EAAAA,GAAQ,CACnCzE,KAAM6C,EAAUC,KAChB9B,KAAI,WACA,MAAO,CAAEe,GAAAA,EAAIiB,MAAAA,EACjB,EACAM,QAAO,SAACC,GACJ,MAAO,CACHmB,WAAYnB,EAAQmB,aAE5B,IACFC,GAAA1G,EAAAA,EAAAA,GAAAuG,EAAA,GAVOE,EAAUC,EAAA,GAAVD,WAcT,OAFAE,EAZ2BD,EAAA,IAYtBJ,EAAK/B,KAGNjE,EAAAA,EAAAA,KAAC+D,EAAG,CACAP,GAAIA,EACJS,IAAKA,EACLC,WAAWG,EAAAA,EAAAA,GACP,yCACA8B,EAAa,YAAc,gBAI3C,C,aCvEYG,EAAU,SAAVA,GAAU,OAAVA,EAAAA,EAAU,mBAAVA,EAAAA,EAAU,qBAAVA,CAAU,MAef,SAASC,IACZ,IAAAC,EAA0BxF,IAAUyF,GAAA/G,EAAAA,EAAAA,GAAA8G,EAAA,GAA7BnF,EAAKoF,EAAA,GAAEnF,EAAQmF,EAAA,GAEhB/B,GAAWgC,EAAAA,EAAAA,cAAY,SAAUpB,EAAmBC,GACtDjE,GAAS,SAAqBqF,GAC1B,IAAMC,EAAMC,IAAOF,EAAW,CAC1BG,QAAS,CACL,CAACxB,EAAW,GACZ,CAACC,EAAY,EAAGoB,EAAUrB,OAIlC,OADA1B,EAAUgD,GACHA,CACX,GACJ,GAAG,CAACtF,IAEJ,OACItB,EAAAA,EAAAA,KAAA,OAAKkE,UAAW6C,EAAAA,EAAgBhH,SAC3BsB,EAAMiB,KAAI,SAAAjC,EAAqCoE,GAAQ,IAAjCjB,EAAEnD,EAAFmD,GAASnD,EAAL+D,MAAU/D,EAAH+C,IAAU/C,EAAL2C,MACnC,OACIhD,EAAAA,EAAAA,KAACwE,EAAO,CAAUC,MAAOA,EAAOjB,GAAIA,EAAIkB,SAAUA,GAApClB,EAEtB,KAGZ,CChCO,SAASrD,IAChB,CAEA,IAAM6G,EAAiC,CACnCC,QAAS,EAAC,EAAO9G,EAAMA,GACvB+G,OAAQ,EAAC,EAAO/G,EAAMA,GACtBgH,KAAM,CAAC,KAAMhH,EAAMA,GACnBuB,aAAc,EAAC,EAAOvB,EAAMA,GAC5BwB,UAAW,EAAC,EAAOxB,EAAMA,GACzByB,iBAAkB,EAAC,EAAOzB,EAAMA,GAChC0B,aAAc,EAAC,EAAO1B,EAAMA,GAC5BiH,KAAM,EAAC,EAAOjH,EAAMA,GACpBsB,KAAM,CAAC6E,EAAWe,QAASlH,EAAMA,IAGxBmH,GAAiBpH,EAAAA,EAAAA,eAAgC8G,GAE9D,SAASO,IAAuC,IAA5BP,EAAoBQ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACxC,OAAO7G,KAAKC,MAAME,aAAaC,QAAQ,YAAcJ,KAAKmD,UAAUkD,GACxE,CAEO,SAASW,EAAYtI,GACxByB,aAAa+C,QAAQ,UAAWlD,KAAKmD,WAAS8D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIL,KAAiBlI,IACzE,CAEO,SAASwI,EAAexH,GAAmC,IAAhCN,EAAQM,EAARN,SACxB+H,EAAiDP,EAAW,CAC9D7F,aAAcsF,EAAatF,aAAa,GACxCC,UAAWqF,EAAarF,UAAU,GAClCC,iBAAkBoF,EAAapF,iBAAiB,GAChDC,aAAcmF,EAAanF,aAAa,GACxCuF,KAAMJ,EAAaI,KAAK,GACxB3F,KAAMuF,EAAavF,KAAK,KAG5BsG,GAA8BrH,EAAAA,EAAAA,UAASsG,EAAaC,QAAQ,IAAGe,GAAAtI,EAAAA,EAAAA,GAAAqI,EAAA,GAAxDd,EAAOe,EAAA,GAAEC,EAAUD,EAAA,GAC1BE,GAA4BxH,EAAAA,EAAAA,UAASsG,EAAaE,OAAO,IAAGiB,GAAAzI,EAAAA,EAAAA,GAAAwI,EAAA,GAArDhB,EAAMiB,EAAA,GAAEC,EAASD,EAAA,GACxBE,GAAwB3H,EAAAA,EAAAA,UAASsG,EAAaG,KAAK,IAAGmB,GAAA5I,EAAAA,EAAAA,GAAA2I,EAAA,GAA/ClB,EAAImB,EAAA,GAAEC,EAAOD,EAAA,GACpBE,GAAwC9H,EAAAA,EAAAA,UAASoH,EAAMpG,cAAa+G,GAAA/I,EAAAA,EAAAA,GAAA8I,EAAA,GAA7D9G,EAAY+G,EAAA,GAAEC,EAAeD,EAAA,GACpCE,GAAkCjI,EAAAA,EAAAA,UAASoH,EAAMnG,WAAUiH,GAAAlJ,EAAAA,EAAAA,GAAAiJ,EAAA,GAApDhH,EAASiH,EAAA,GAAEC,EAAYD,EAAA,GAC9BE,GAAgDpI,EAAAA,EAAAA,UAASoH,EAAMlG,kBAAiBmH,GAAArJ,EAAAA,EAAAA,GAAAoJ,EAAA,GAAzElH,EAAgBmH,EAAA,GAAEC,EAAmBD,EAAA,GAC5CE,GAAwCvI,EAAAA,EAAAA,UAASoH,EAAMjG,cAAaqH,GAAAxJ,EAAAA,EAAAA,GAAAuJ,EAAA,GAA7DpH,EAAYqH,EAAA,GAAEC,EAAeD,EAAA,GACpCE,GAAwB1I,EAAAA,EAAAA,UAASoH,EAAMV,MAAKiC,GAAA3J,EAAAA,EAAAA,GAAA0J,EAAA,GAArChC,EAAIiC,EAAA,GAAEC,EAAOD,EAAA,GACpBE,GAAwB7I,EAAAA,EAAAA,UAASoH,EAAMrG,MAA4B+H,GAAA9J,EAAAA,EAAAA,GAAA6J,EAAA,GAA5D9H,EAAI+H,EAAA,GAAEC,EAAOD,EAAA,GAEdnK,EAA0B,CAC5B4H,QAAS,CAACA,EAASgB,GAAYvB,EAAAA,EAAAA,cAAY,WACvCuB,GAAW,SAAUyB,GACjB,OAAQA,CACZ,GACJ,GAAG,CAACzB,KACJf,OAAQ,CAACA,EAAQkB,GAAW1B,EAAAA,EAAAA,cAAY,WACpC0B,GAAU,SAAUsB,GAChB,OAAQA,CACZ,GACJ,GAAG,CAACtB,KACJjB,KAAM,CACFA,EACAoB,GACA7B,EAAAA,EAAAA,aAAYvG,EAAM,KAEtBuB,aAAc,CACVA,EACAgH,GACAhC,EAAAA,EAAAA,cAAY,WACRgC,GAAgB,SAAUgB,GAUtB,OATAb,GAAa,GACbG,GAAoB,GACpBG,GAAgB,GAChBxB,EAAY,CACRjG,cAAegI,EACf/H,WAAW,EACXC,kBAAkB,EAClBC,cAAc,KAEV6H,CACZ,GACJ,GAAG,CAAChB,EAAiBG,EAAcG,EAAqBG,KAE5DxH,UAAW,CACPA,EACAkH,GACAnC,EAAAA,EAAAA,cAAY,WACRmC,GAAa,SAAUa,GAUnB,OATAhB,GAAgB,GAChBM,GAAoB,GACpBG,GAAgB,GAChBxB,EAAY,CACRhG,WAAY+H,EACZhI,cAAc,EACdE,kBAAkB,EAClBC,cAAc,KAEV6H,CACZ,GACJ,GAAG,CAAChB,EAAiBG,EAAcG,EAAqBG,KAE5DvH,iBAAkB,CACdA,EACAoH,GACAtC,EAAAA,EAAAA,cAAY,WACRsC,GAAoB,SAAUU,GAU1B,OATAhB,GAAgB,GAChBG,GAAa,GACbM,GAAgB,GAChBxB,EAAY,CACR/F,kBAAmB8H,EACnB/H,WAAW,EACXD,cAAc,EACdG,cAAc,KAEV6H,CACZ,GACJ,GAAG,CAAChB,EAAiBG,EAAcG,EAAqBG,KAE5DtH,aAAc,CACVA,EACAsH,GACAzC,EAAAA,EAAAA,cAAY,WACRyC,GAAgB,SAAUO,GAUtB,OATAhB,GAAgB,GAChBG,GAAa,GACbG,GAAoB,GACpBrB,EAAY,CACR9F,cAAe6H,EACf9H,kBAAkB,EAClBD,WAAW,EACXD,cAAc,KAEVgI,CACZ,GACJ,GAAG,CAAChB,EAAiBG,EAAcG,EAAqBG,KAE5D/B,KAAM,CACFA,EACAkC,GACA5C,EAAAA,EAAAA,cAAY,WACR4C,GAAQ,SAAUI,GAEd,OADA/B,EAAY,CAAEP,MAAOsC,KACbA,CACZ,GACJ,GAAG,CAACJ,KAER7H,KAAM,CACFA,EACAgI,GACA/C,EAAAA,EAAAA,cAAY,WACR+C,GAAQ,SAAUC,GACd,OAAOA,IAAcpD,EAAWe,QAAUf,EAAWqD,OAASrD,EAAWe,OAC7E,GACJ,GAAG,CAACoC,MAIZ,OACIzJ,EAAAA,EAAAA,KAACsH,EAAe7G,SAAQ,CAACpB,MAAOA,EAAMU,SACjCA,GAGb,CAEO,SAAS6J,EAAWC,GACvB,OAAO1I,EAAAA,EAAAA,YAAWmG,GAAgBuC,EACtC,CAEO,SAASC,EAAUD,GACtB,OAAO1I,EAAAA,EAAAA,YAAWmG,GAAgBuC,GAAQ,EAC9C,CAEO,SAASrI,IACZ,IAAMuI,GAAU5I,EAAAA,EAAAA,YAAWmG,GACrBV,EAAW,CAAC,EAMlB,OALAoD,OAAOC,KAAKF,GAASzH,KAAI,SAAU4H,GAC/B,IAAMxH,EAAMwH,EAEZ,OADAtD,EAAIlE,GAAOqH,EAAQrH,GAAK,GACjBA,CACX,IACOkE,CACX,C,gDCxLO,SAASuD,EAAY9J,GAAqC,IAA9BsD,EAAMtD,EAAVmD,GAC3BgD,EAAqBxF,IAAZM,GAAsB5B,EAAAA,EAAAA,GAAA8G,EAAA,GAAd,GACX4D,GAAU1D,EAAAA,EAAAA,cAAY,WACxBpF,GAAS,SAAUoI,GACf,IAAMW,EAAmB1J,KAAKC,MAAMD,KAAKmD,UAAU4F,IAC7CjF,EAAQ4F,EAAKC,WAAU,SAAArI,GACzB,OADuCA,EAAFuB,KACvBG,CAClB,IAGA,OAFA0G,EAAKE,OAAO9F,EAAO,GACnBb,EAAUyG,GACHA,CACX,GACJ,GAAG,CAAC/I,EAAUqC,IAEd,OACI3D,EAAAA,EAAAA,KAACwK,EAAAA,YAAW,CAACC,aAAa,EAAML,QAASA,EAASM,IAAI,MAAK3K,UACvDC,EAAAA,EAAAA,KAAA,UAAQkE,UAAU,uCAAsCnE,SAAC,gDAKrE,CCrBO,SAAS4K,EAAUtK,GAAmC,IAA5BsD,EAAMtD,EAAVmD,GACzBoH,EAAoBhB,EAAW,QAAtBrB,GAA6B7I,EAAAA,EAAAA,GAAAkL,EAAA,GAAtB,GAEVR,GAAU1D,EAAAA,EAAAA,cAAY,WACvB6B,GAAoD,WACjD,OAAO5E,CACX,GACJ,GAAG,CAAC4E,EAAS5E,IAEb,OACI3D,EAAAA,EAAAA,KAACwK,EAAAA,YAAW,CAACJ,QAASA,EAASM,IAAI,MAAK3K,UACpCC,EAAAA,EAAAA,KAAA,UAAQkE,WAAWG,EAAAA,EAAAA,GACf,mCACA,QACFtE,SAAC,qCAKf,CClBO,SAAS8K,EAAexK,GAAwC,IAAjCsD,EAAMtD,EAAVmD,GAC9BgD,EAAqBxF,IAAZM,GAAsB5B,EAAAA,EAAAA,GAAA8G,EAAA,GAAd,GACTnD,EAASE,EAAQI,GAAjBN,KAEF+G,GAAU1D,EAAAA,EAAAA,cAAY,WACxBpF,GAAS,SAAUoI,GACf,IAAMW,EAAmB1J,KAAKC,MAAMD,KAAKmD,UAAU4F,IAC7CjF,EAAQ4F,EAAKC,WAAU,SAAArI,GACzB,OADuCA,EAAFuB,KACvBG,CAClB,IAGA,OAFA0G,EAAK5F,GAAOpB,MAAQgH,EAAK5F,GAAOpB,KAChCO,EAAUyG,GACHA,CACX,GACJ,GAAG,CAAC/I,EAAUqC,IAEd,OACI3D,EAAAA,EAAAA,KAACwK,EAAAA,YAAW,CAACE,IAAI,MAAMN,QAASA,EAAQrK,UACpCC,EAAAA,EAAAA,KAAA,UACIkE,WAAWG,EAAAA,EAAAA,GACP,yDACA,OACAhB,EAAO,OAAS,cAClBtD,SACL,4DAKb,CC9BO,SAAS+K,EAAYzK,GAAqC,IAA9BsD,EAAMtD,EAAVmD,GAC3BgD,EAAiBxF,IAAR+J,GAAkBrL,EAAAA,EAAAA,GAAA8G,EAAA,GAAd,GAEP4D,GAAU1D,EAAAA,EAAAA,cAAY,WACxBqE,GAAK,SAAUrB,GACX,IAAMW,EAAmB1J,KAAKC,MAAMD,KAAKmD,UAAU4F,IAC7CjF,EAAQ4F,EAAKC,WAAU,SAAArI,GACzB,OADuCA,EAAFuB,KACvBG,CAClB,IAGA,OAFA0G,EAAK5F,GAAOnB,QAAU+G,EAAK5F,GAAOnB,OAClCM,EAAUyG,GACHA,CACX,GACJ,GAAG,CAACU,EAAMpH,IAEV,OACI3D,EAAAA,EAAAA,KAACwK,EAAAA,YAAW,CAACE,IAAI,MAAMN,QAASA,EAAQrK,UACpCC,EAAAA,EAAAA,KAAA,UAAQkE,UAAU,oEAAmEnE,SAAC,kEAKlG,CCTA,IAAMiL,EAAS,CACX,KACA,mBACA,oBACA,qBACA,uBAGG,SAASC,EAAI5K,GAAsD,IAAnD6K,EAAO7K,EAAP6K,QAASC,EAAQ9K,EAAR8K,SAAUC,EAAa/K,EAAb+K,cAChC3J,EAAOqI,EAAU,QAEvB/B,GAA2DrH,EAAAA,EAAAA,UAAwB,CAC/E0D,OAAoB,OAAbgH,QAAa,IAAbA,OAAa,EAAbA,EAAehH,QAAS,GAC/BhB,KAAkB,OAAbgI,QAAa,IAAbA,OAAa,EAAbA,EAAehI,MAAO,EAC3BJ,OAAoB,OAAboI,QAAa,IAAbA,OAAa,EAAbA,EAAepI,QAAS,KAC/BK,MAAmB,OAAb+H,QAAa,IAAbA,OAAa,EAAbA,EAAe/H,QAAQ,EAC7BC,QAAqB,OAAb8H,QAAa,IAAbA,OAAa,EAAbA,EAAe9H,UAAU,IACnC0E,GAAAtI,EAAAA,EAAAA,GAAAqI,EAAA,GAAAsD,EAAArD,EAAA,GANO5D,EAAKiH,EAALjH,MAAOhB,EAAGiI,EAAHjI,IAAKJ,EAAKqI,EAALrI,MAAOM,EAAM+H,EAAN/H,OAAQD,EAAIgI,EAAJhI,KAAQiI,EAAWtD,EAAA,GAQjDuD,GAAW7E,EAAAA,EAAAA,cAAY,SAAkB8E,GAC3CA,EAAEC,iBACFP,EAAQ,CAAE1H,GC1CP,uCAAuCkI,QAAQ,SAAS,SAAAC,GAC3D,IAAMC,EAAoB,GAAhBC,KAAKC,SAAgB,EAG/B,OADe,KAALH,EAAWC,EAAS,EAAJA,EAAU,GAC3BG,SAAS,GACtB,IDqC4B3H,MAAAA,EAAOhB,IAAAA,EAAKJ,MAAAA,EAAOK,KAAAA,EAAMC,OAAAA,GACrD,GAAG,CAACc,EAAOhB,EAAK8H,EAASlI,EAAOK,EAAMC,IAEhC0I,EAAcvK,IAAS6E,EAAWqD,OAClC,qCACA,sCAEN,OACI9J,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,MAAA,OAAKqE,WAAWG,EAAAA,EAAAA,GACZ,uBACA2H,EACAjF,EAAAA,EACAqE,EAAgB,GAAK,kBACvBrL,SAAA,CACGiL,EAAO1I,KAAI,SAAU2J,EAASxH,GAC3B,OACIzE,EAAAA,EAAAA,KAAA,UAEIoK,QAAS,WACLkB,GAAY,SAAU5B,GAClB,OAAA9B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY8B,GAAS,IAAE1G,MAAOiJ,GAClC,GACJ,EACA/H,WAAWG,EAAAA,EAAAA,GACP,6BACA,6CACArB,IAAUiJ,GAAW,oBACrBA,IAAoB5H,EAAAA,EAAAA,GAChB,yBACA,0CACA,uDAbHI,EAkBjB,KACAzE,EAAAA,EAAAA,KAAA,UACIkE,WAAWG,EAAAA,EAAAA,GACP,UACA,YACA,cACA,0CACA,UACAf,GAAU,WAEd8G,QAAS,WACLkB,GAAY,SAAU5B,GAClB,OAAA9B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY8B,GAAS,IAAEpG,QAASoG,EAAUpG,QAC9C,GACJ,KAEJtD,EAAAA,EAAAA,KAAA,UACIkE,WAAWG,EAAAA,EAAAA,GACP,YACA,OACAhB,EAAO,cAAgB,aACvB,2CAEJ+G,QAAS,WACLkB,GAAY,SAAU5B,GAClB,OAAA9B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY8B,GAAS,IAAErG,MAAOqG,EAAUrG,MAC5C,GACJ,QAGRxD,EAAAA,EAAAA,MAAA,QACI0L,SAAUA,EACVrH,WAAWG,EAAAA,EAAAA,GACP,mBACA,qCACA,YACA0C,EAAAA,EACAiF,EACA,kBACFjM,SAAA,EAEFC,EAAAA,EAAAA,KAAA,SAAOyB,KAAK,OAAOyC,UAAU,mBAAmBgI,YAAY,mDACxDC,WAAS,EACTC,UAAQ,EACRpF,aAAc5C,EACdiI,SAAU,SAAUb,GAChBF,GAAY,SAAU5B,GAClB,OAAA9B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY8B,GAAS,IAAEtF,MAAOoH,EAAEc,OAAOjN,OAC3C,GACJ,KAEJW,EAAAA,EAAAA,KAAA,SAAOyB,KAAK,SAASyC,UAAU,mBAAmBgI,YAAY,iCAC1DK,IAAK,EACLC,KAAM,IACNC,IAAK,IACLzF,aAAc5D,EACdiJ,SAAU,SAAUb,GAChBF,GAAY,SAAU5B,GAClB,OAAA9B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY8B,GAAS,IAAEtG,IAAKsJ,OAAOlB,EAAEc,OAAOjN,QAChD,GACJ,KAEJW,EAAAA,EAAAA,KAAA,UAAQyB,KAAK,SAASyC,UAAU,4BAA2BnE,SACtDqL,EAAgB,yDAAc,qDAElCD,GACGnL,EAAAA,EAAAA,KAAA,UAAQyB,KAAK,SAASyC,UAAU,qBAAqBkG,QAASe,EAASpL,SAAC,0CAIxEC,EAAAA,EAAAA,KAAA,OAAKkE,UAAU,4BAKnC,CE/IO,SAASyI,EAAQtM,GAAiC,IAA1BsD,EAAMtD,EAAVmD,GACvBW,EAA4CZ,EAAQI,GAA5CS,EAAKD,EAALC,MAAOhB,EAAGe,EAAHf,IAAKJ,EAAKmB,EAALnB,MAAOM,EAAMa,EAANb,OAAQD,EAAIc,EAAJd,KACnCuH,EAAoBhB,EAAW,QAAtBrB,GAA6B7I,EAAAA,EAAAA,GAAAkL,EAAA,GAAtB,GAChBpE,EAAiBxF,IAAR+J,GAAkBrL,EAAAA,EAAAA,GAAA8G,EAAA,GAAd,GACP0E,GAAUxE,EAAAA,EAAAA,cAAY,SAAUkG,GAClC7B,GAAK,SAAUrB,GACX,IAAMW,EAAmB1J,KAAKC,MAAMD,KAAKmD,UAAU4F,IAC7CjF,EAAQ4F,EAAKC,WAAU,SAAArI,GACzB,OADuCA,EAAFuB,KACvBG,CAClB,IAUA,OATA0G,EAAK5F,IAAMmD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJyC,EAAK5F,IAAM,IACdL,MAAOwI,EAAQxI,MACfhB,IAAKwJ,EAAQxJ,IACbJ,MAAO4J,EAAQ5J,MACfM,OAAQsJ,EAAQtJ,OAChBD,KAAMuJ,EAAQvJ,OAElBO,EAAUyG,GACHA,CACX,IAEA9B,EAAQ,KACZ,GAAG,CAACwC,EAAMpH,EAAQ4E,IAElB,OACIvI,EAAAA,EAAAA,KAACiL,EAAI,CACDG,cAAe,CAAEhH,MAAAA,EAAOhB,IAAAA,EAAKJ,MAAAA,EAAOM,OAAAA,EAAQD,KAAAA,GAC5C6H,QAASA,EACTC,SAAU,WAEN5C,EAAQ,KACZ,GAGZ,C,iBC/BO,SAASsE,EAASxM,GAAmC,IAAhCsD,EAAMtD,EAANsD,OAAWmJ,GAAKC,EAAAA,EAAAA,GAAA1M,EAAA2M,GACxCzL,EAA+BC,IAAjByL,EAAM1L,EAAZ4F,KAAc1F,EAAIF,EAAJE,KAEtB,OACI5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACkN,EAAAA,mBAAiBtF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACVkF,GAAK,IACTK,SAAU,GACVC,gBACIvN,EAAAA,EAAAA,MAACwN,EAAAA,eAAc,CAAAtN,SAAA,EACXC,EAAAA,EAAAA,KAAC6K,EAAe,CAACrH,GAAIG,KACrB3D,EAAAA,EAAAA,KAAC8K,EAAY,CAACtH,GAAIG,OAG1B2J,iBACIzN,EAAAA,EAAAA,MAAC0N,EAAAA,gBAAe,CAAAxN,SAAA,EACZC,EAAAA,EAAAA,KAAC2K,EAAU,CAACnH,GAAIG,KAChB3D,EAAAA,EAAAA,KAACmK,EAAY,CAAC3G,GAAIG,OAEzB5D,UAEDC,EAAAA,EAAAA,KAAC+D,EAAG,CACAP,GAAIG,EACJO,WAAWG,EAAAA,EAAAA,GAAG,cACV4I,IAAWtJ,IAAUU,EAAAA,EAAAA,GACjB,wDACC5C,IAAiC6E,EAAWqD,OACvC,qCACA,6CAKrBsD,IAAWtJ,IACR3D,EAAAA,EAAAA,KAAC2M,EAAQ,CAACnJ,GAAIG,MAI9B,CC9CO,SAAS6J,IACZ,IAAAhH,EAAgBxF,IAATK,GAAmB3B,EAAAA,EAAAA,GAAA8G,EAAA,GAAd,GACZjF,EAAqCC,IAA7B0F,EAAM3F,EAAN2F,OAAQtF,EAAgBL,EAAhBK,iBAEhB,OAAqB,IAAjBP,EAAMoG,QAAiBP,GAevBlH,EAAAA,EAAAA,KAACyN,EAAAA,cAAa,CAAChM,KAAMiM,EAAAA,KAAKC,IAAKzJ,UAAW6C,EAAAA,EAAgBhH,SACrDsB,EAAMiB,KAAI,SAAAjC,GAAmB,IAAPmD,EAAEnD,EAAFmD,GACnB,OACIxD,EAAAA,EAAAA,KAAC6M,EAAS,CAAUlJ,OAAQH,GAAZA,EAExB,OAlBAxD,EAAAA,EAAAA,KAAA,OAAKkE,UAAU,mBAAkBnE,SAC5B6B,GACG5B,EAAAA,EAAAA,KAAA,OAAKkE,UAAU,6CAA4CnE,SAAC,2HAI5DC,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,SAAE,oCAetB,CC3BO,SAAS6N,IACZ,IAAApH,EAAgBxF,EAAS,OAAlBK,GAAwB3B,EAAAA,EAAAA,GAAA8G,EAAA,GAAnB,GAEZqH,GAA0BC,EAAAA,EAAAA,UAAQ,WAC9B,OAAOzM,EAAM0M,QAAO,SAAUC,EAAI3N,GAAkB,IAAdoB,EAAIpB,EAAJoB,KAAM2B,EAAG/C,EAAH+C,IAOxC,OANI3B,IAAS6E,EAAWe,UACpB2G,EAAK,GAAKA,EAAK,GAAK5K,GAEpB3B,IAAS6E,EAAWqD,SACpBqE,EAAK,GAAKA,EAAK,GAAK5K,GAEjB4K,CACX,GAAG,CAAC,EAAG,GACX,GAAG,CAAC3M,IAAO4M,GAAAvO,EAAAA,EAAAA,GAAAmO,EAAA,GAVJxG,EAAO4G,EAAA,GAAEtE,EAAMsE,EAAA,GAYtB,OACIpO,EAAAA,EAAAA,MAAA,UAAQqE,WAAWG,EAAAA,EAAAA,GACf,WACA0C,EAAAA,EACA,wCACA,mCACA,mBACFhH,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKqE,UAAU,6BAA4BnE,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OAAKkE,UAAU,4BAA2BnE,SAAC,2CAG3CC,EAAAA,EAAAA,KAAA,QAAMkE,UAAU,4BAA2BnE,SACtCX,EAAauK,SAGtB9J,EAAAA,EAAAA,MAAA,OAAKqE,UAAU,iEAAgEnE,SAAA,EAC3EC,EAAAA,EAAAA,KAAA,OAAKkE,UAAU,4BAA2BnE,SAAC,iDAG3CC,EAAAA,EAAAA,KAAA,QAAMkE,UAAU,4BAA2BnE,SACtCX,EAAaiI,SAGtBxH,EAAAA,EAAAA,MAAA,OAAKqE,UAAU,iEAAgEnE,SAAA,EAC3EC,EAAAA,EAAAA,KAAA,OAAKkE,UAAU,+BAEflE,EAAAA,EAAAA,KAAA,QAAMkE,UAAU,4BAA2BnE,SACtCX,EAAauK,EAAStC,UAK3C,CCnDO,SAAS6G,IACZ,IAAA1H,EAAgBxF,IAATK,GAAmB3B,EAAAA,EAAAA,GAAA8G,EAAA,GAAd,GACZoE,EAA4BhB,EAAW,WAAUuE,GAAAzO,EAAAA,EAAAA,GAAAkL,EAAA,GAA1C3D,EAAOkH,EAAA,GAAItE,EAAMsE,EAAA,GACxB5M,EAAkFC,IAA1EE,EAAYH,EAAZG,aAAcC,EAASJ,EAATI,UAAWuF,EAAM3F,EAAN2F,OAAQC,EAAI5F,EAAJ4F,KAAMvF,EAAgBL,EAAhBK,iBAAkBC,EAAYN,EAAZM,aAEjE,OACI7B,EAAAA,EAAAA,KAAA,UACIoO,SAAU/M,EAAMoG,QAAU,KAAO/F,KAAkBC,KAAeuF,KAAYC,KAAUvF,KAAsBC,EAC9GqC,WAAWG,EAAAA,EAAAA,GAAG,OAAQ4C,EAAU,UAAY,WAC5CmD,QAASP,EAAO9J,SAEfkH,EAAU,uCAAW,mCAGlC,CCdO,SAASoH,IACZ,IAAA7H,EAAgBxF,IAATK,GAAmB3B,EAAAA,EAAAA,GAAA8G,EAAA,GAAd,GACZoE,EAA2BhB,EAAW,UAASuE,GAAAzO,EAAAA,EAAAA,GAAAkL,EAAA,GAAxC1D,EAAMiH,EAAA,GAAItE,EAAMsE,EAAA,GAEvB,OACInO,EAAAA,EAAAA,KAAA,UACIoO,SAAU/M,EAAMoG,QAAU,EAC1BvD,WAAWG,EAAAA,EAAAA,GAAG,OAAQ6C,EAAS,SAAW,OAC1CkD,QAASP,EAAO9J,SAEfmH,EAAS,uCAAW,kCAGjC,CCdO,IAAMoH,EAAW,gDAEjB,SAASC,IACZ,IAAA3D,EAA6ChB,EAAW,gBAAeuE,GAAAzO,EAAAA,EAAAA,GAAAkL,EAAA,GAAhElJ,EAAYyM,EAAA,GAAIK,EAAkBL,EAAA,GAEzC,OACInO,EAAAA,EAAAA,KAAA,UACIkE,WAAWG,EAAAA,EAAAA,GAAG,uBAAwB3C,GAAgB4M,GACtDlE,QAASoE,EAAmBzO,SAC/B,kCAIT,CCZO,SAAS0O,IACZ,IAAA7D,EAA0BhB,EAAW,aAAYuE,GAAAzO,EAAAA,EAAAA,GAAAkL,EAAA,GAA1CvL,EAAK8O,EAAA,GAAItE,EAAMsE,EAAA,GAEtB,OACInO,EAAAA,EAAAA,KAAA,UACIkE,WAAWG,EAAAA,EAAAA,GAAG,uBAAwBhF,GAASiP,GAC/ClE,QAASP,EAAO9J,SACnB,uBAIT,CCVO,SAAS2O,KACZ,IAAA9D,EAA0BhB,EAAW,oBAAmBuE,GAAAzO,EAAAA,EAAAA,GAAAkL,EAAA,GAAjDvL,EAAK8O,EAAA,GAAItE,EAAMsE,EAAA,GAEtB,OACInO,EAAAA,EAAAA,KAAA,UACIkE,WAAWG,EAAAA,EAAAA,GAAG,sBAAuBhF,GAASiP,GAC9ClE,QAASP,EAAO9J,SACnB,6BAIT,CCZO,SAAS4O,KACZ,IAAA/D,EAA0BhB,EAAW,gBAAeuE,GAAAzO,EAAAA,EAAAA,GAAAkL,EAAA,GAA7CvL,EAAK8O,EAAA,GAAItE,EAAMsE,EAAA,GAEtB,OACInO,EAAAA,EAAAA,KAAA,UACIkE,WAAWG,EAAAA,EAAAA,GAAG,gCAAiChF,GAASiP,GACxDlE,QAASP,EAAO9J,SACnB,yCAIT,CCLO,SAAS6O,KACZ,IAAMxH,EAAO0C,EAAU,QAEvB,OACI9J,EAAAA,EAAAA,KAAA,OAAKkE,WAAWG,EAAAA,EAAAA,GACZ,2CACA0C,EAAAA,EACA,yDACAK,EAAO,YAAc,OACvBrH,SACGqH,IACGpH,EAAAA,EAAAA,KAAC6O,GAAY,KAI7B,CAEA,SAASA,KACL,OACIhP,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACqO,EAAa,KACdrO,EAAAA,EAAAA,KAACkO,EAAa,KACdlO,EAAAA,EAAAA,KAAC2O,GAAkB,KACnB3O,EAAAA,EAAAA,KAAC0O,GAAsB,KACvB1O,EAAAA,EAAAA,KAACuO,EAAkB,KACnBvO,EAAAA,EAAAA,KAACyO,EAAe,MAG5B,C,cCjCO,SAASK,KACZ,IAAAtI,EAA0BxF,IAAUyF,GAAA/G,EAAAA,EAAAA,GAAA8G,EAAA,GAA7BnF,EAAKoF,EAAA,GAAEnF,EAAQmF,EAAA,GACtBmE,EAAoChB,EAAW,UAASuE,GAAAzO,EAAAA,EAAAA,GAAAkL,EAAA,GAAjD1D,EAAMiH,EAAA,GAAE/F,EAAS+F,EAAA,GAAEtE,EAAMsE,EAAA,GAChC5M,EAAiDC,IAAzCC,EAAIF,EAAJE,KAAMG,EAAgBL,EAAhBK,iBAAkBC,EAAYN,EAAZM,aAEhC,OACI7B,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACMmH,GAAU7F,EAAMoG,QAAU,KAAO7F,IAAqBC,IACpD7B,EAAAA,EAAAA,KAACiL,GAAIrD,EAAAA,EAAAA,GAAA,CACDsD,QAAS,SAAUzI,GACfnB,GAAS,SAAUoI,GACfjH,EAAKhB,KAAOA,EACZ,IAAMmF,EAAG,GAAA/F,QAAAkO,EAAAA,GAAAA,GAAOrF,GAAS,CAAEjH,IAG3B,OAFAmB,EAAUgD,GACVwB,GAAU,GACHxB,CACX,GACJ,GACIvF,EAAMoG,QAAU,EAAI,CAAC,EAAI,CACzB0D,SAAUtB,MAMlC,CCzBA,SAASmF,GAAG3O,GAAoE,IAAjEyB,EAAUzB,EAAVyB,WAAYsC,EAAK/D,EAAL+D,MACvBwG,EAAwBhB,EAAW,QAAOuE,GAAAzO,EAAAA,EAAAA,GAAAkL,EAAA,GAAnCnJ,EAAI0M,EAAA,GAAE1E,EAAO0E,EAAA,GAEpB,OACInO,EAAAA,EAAAA,KAAA,UACIoK,QAAS,WACLX,EAAQ3H,GACR6F,EAAY,CAAElG,KAAMK,GACxB,EACAoC,WAAWG,EAAAA,EAAAA,GAAG,aACV5C,IAASK,GAAc,8CACzB/B,SAEDqE,GAGb,CAEO,SAAS6K,KACZ,IAAM7H,EAAO0C,EAAU,QAEvB,OACIjK,EAAAA,EAAAA,MAAA,OAAKqE,WAAWG,EAAAA,EAAAA,GAAG,mBACf,+BACA+C,EAAO,cAAgB,SACvBL,EAAAA,GACFhH,SAAA,EACEC,EAAAA,EAAAA,KAACgP,GAAG,CAAC5K,MAAM,6CAAUtC,WAAYwE,EAAWe,WAC5CrH,EAAAA,EAAAA,KAACgP,GAAG,CAAC5K,MAAM,uCAAStC,WAAYwE,EAAWqD,WAGvD,CCjCO,SAASuF,KACZ,IAAAtE,EAAyBhB,EAAW,QAAOuE,GAAAzO,EAAAA,EAAAA,GAAAkL,EAAA,GAApCxD,EAAI+G,EAAA,GAAItE,EAAMsE,EAAA,GAErB,OACInO,EAAAA,EAAAA,KAAA,UAAQoK,QAASP,EAAQ3F,WAAWG,EAAAA,EAAAA,GAChC,2CACA,OACA+C,EAAO,SAAW,OAClB,+CAIZ,CCUO,SAAS+H,KACZ,IAAMlI,EAAU6C,EAAU,WAE1B,OACIjK,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACoP,EAAAA,EAAM,CAAArP,UACHC,EAAAA,EAAAA,KAACkP,GAAU,OAEflP,EAAAA,EAAAA,KAAC4O,GAAoB,KACrB5O,EAAAA,EAAAA,KAACiP,GAAI,KACLjP,EAAAA,EAAAA,KAAA,OAAKkE,UAAU,SACflE,EAAAA,EAAAA,KAAC8O,GAAO,IACP7H,GACGjH,EAAAA,EAAAA,KAACqP,EAAAA,EAAW,CAACC,QAASC,EAAAA,GAAaxP,UAC/BC,EAAAA,EAAAA,KAACuG,EAAG,OAGRvG,EAAAA,EAAAA,KAACwN,EAAK,KAEVxN,EAAAA,EAAAA,KAAA,OAAKkE,UAAU,SACflE,EAAAA,EAAAA,KAAC4N,EAAM,MAGnB,CC5Ce,SAAS4B,KACtB,OACExP,EAAAA,EAAAA,KAAC6H,EAAe,CAAA9H,UACdC,EAAAA,EAAAA,KAACI,EAAa,CAAAL,UACZC,EAAAA,EAAAA,KAACmP,GAAG,OAIZ,C","sources":["helpers/sumDecorator.tsx","components/ItemsProvider.tsx","helpers/groupBy.ts","components/Row.tsx","components/dnd/DndItem.tsx","components/dnd/Dnd.tsx","components/TogglesProvider.tsx","components/buttons/DeleteButton.tsx","components/buttons/EditButton.tsx","components/buttons/FavouriteButton.tsx","components/buttons/StrikeButton.tsx","components/Form.tsx","helpers/makeId.tsx","components/swipe/EditForm.tsx","components/swipe/SwipeItem.tsx","components/swipe/Swipe.tsx","components/Footer.tsx","components/buttons/ReorderButton.tsx","components/buttons/AddItemButton.tsx","components/buttons/SortByColorsButton.tsx","components/buttons/SortBySumButton.tsx","components/buttons/SortByFavouritesButton.tsx","components/buttons/SortByStrikeButton.tsx","components/ActionsPanel.tsx","components/AddForm.tsx","components/Tabs.tsx","components/buttons/MenuButton.tsx","components/App.tsx","components/AppWithProviders.tsx"],"sourcesContent":["const moneySymbol = \"€\"\n\nexport function sumDecorator(value: number) {\n    const [a, b] = value.toFixed(2).split(\".\")\n\n    return (\n        <>\n            <strong>{a}</strong>\n            {\",\"}\n            <span>{b}</span>\n            {moneySymbol}\n        </>\n    )\n}\n","import { createContext, Dispatch, PropsWithChildren, SetStateAction, useContext, useEffect, useState } from \"react\"\nimport { Item as ItemType, Item, TypeOfItem } from \"./dnd/Dnd\"\nimport { noop, useToggleValues } from \"./TogglesProvider\"\nimport { groupBy } from \"../helpers/groupBy\"\n\nexport const ItemsContext = createContext<[\n    Item[],\n    Dispatch<SetStateAction<Item[]>>\n]>([[], noop])\n\nexport function ItemsProvider({ children }: PropsWithChildren) {\n    useEffect(function () {\n        console.log(\"!!! ItemsProvider !!!\")\n    }, [])\n\n    return (\n        <ItemsContext.Provider value={useState<Item[]>(\n            JSON.parse(`${localStorage.getItem(\"data\")}`) || [],\n        )}>\n            {children}\n        </ItemsContext.Provider>\n    )\n}\n\nexport function useItems(flag?: \"all\"): [Item[], Dispatch<SetStateAction<Item[]>>] {\n    const [items, setItems] = useContext(ItemsContext)\n    const { type, sortByColors, sortBySum, sortByFavourites, sortByStrike } = useToggleValues()\n    const typeOfItem = type as never as TypeOfItem\n\n    let resultItems = flag === \"all\" ? items\n        : items.filter(function ({ type }) {\n            return type === typeOfItem\n        })\n\n    if (sortByColors) {\n        resultItems = Array.from(groupBy(resultItems, function (item) {\n            return item.color\n        })).map(function ([, item]) {\n            return item\n        }).flat()\n    }\n\n    if (sortBySum) {\n        resultItems = Array.from(resultItems).sort(function (a, b) {\n            return b.sum - a.sum\n        })\n    }\n\n    if (sortByFavourites) {\n        resultItems = resultItems.filter(function (item) {\n            return item.star\n        })\n    }\n\n    if (sortByStrike) {\n        resultItems = resultItems.filter(function (item) {\n            return !item.strike\n        })\n    }\n\n    return [resultItems, setItems]\n}\n\nexport function useItem(id: string): Item {\n    return useContext(ItemsContext)[0].find(function ({ id: itemId }) {\n        return id === itemId\n    }) as Item\n}\n\nexport function saveItems(items: ItemType[]) {\n    localStorage.setItem(\"data\", JSON.stringify(items))\n}\n","export function groupBy<T>(list: T[], keyGetter: (item: T) => any) {\n    const map = new Map()\n    list.forEach((item) => {\n        const key = keyGetter(item)\n        const collection = map.get(key)\n        if (!collection) {\n            map.set(key, [item])\n        } else {\n            collection.push(item)\n        }\n    })\n    return map\n}\n","import { forwardRef } from \"react\"\nimport cx from \"../helpers/cx\"\nimport { sumDecorator } from \"../helpers/sumDecorator\"\nimport { useItem } from \"./ItemsProvider\"\n\ninterface RowProps {\n    id: string\n    className?: string\n}\n\nexport const gridRowClassNames: string = \"grid grid-cols-[1fr_150px] gap-2\"\n\nexport const Row = forwardRef<HTMLDivElement, RowProps>(function ({ id, className }, ref) {\n    const { title, sum, color, strike, star } = useItem(id)\n\n    return (\n        <div ref={ref} className={cx(\n            className,\n            \"flex border-t border-[var(--line-color)] w-full pl-7 pr-2 py-2\",\n            \"relative\",\n            \"after:absolute after:top-0.5 after:left-0 after:bottom-0.5\",\n            \"after:rounded-r\",\n            \"after:block after:w-1.5\",\n            color ? color : \"\",\n        )}>\n            {star && (\n                <div className={cx(\n                    \"absolute left-2.5 top-0 bottom-0\",\n                    \"w-4\",\n                    \"bg-[url('../public/assets/star-yellow.svg')]\",\n                    \"bg-contain bg-center bg-no-repeat\",\n                )} />\n            )}\n            <div className={cx(\"text-xl flex items-center\", strike && \"line-through\")}>\n                {title}\n            </div>\n            <code className={cx(\"flex-1 text-xl text-right\", strike && \"line-through\")}>\n                {sumDecorator(sum)}\n            </code>\n        </div>\n    )\n})\n","import type { Identifier, XYCoord } from 'dnd-core'\nimport { useRef } from 'react'\nimport { useDrag, useDrop } from 'react-dnd'\nimport cx from \"../../helpers/cx\"\nimport { Row } from \"../Row\"\n\nexport const ItemTypes = {\n    CARD: 'card',\n}\n\nexport interface CardProps {\n    id: any\n    index: number\n    moveCard: (dragIndex: number, hoverIndex: number) => void\n}\n\ninterface DragItem {\n    index: number\n    id: string\n    type: string\n}\n\nexport function DndItem({ id, index, moveCard }: CardProps) {\n    const ref = useRef<HTMLDivElement>(null)\n    const [, drop] = useDrop<DragItem, void, { handlerId: Identifier | null }>({\n        accept: ItemTypes.CARD,\n        collect(monitor) {\n            return {\n                handlerId: monitor.getHandlerId(),\n            }\n        },\n        hover(item: DragItem, monitor) {\n            if (!ref.current) {\n                return\n            }\n            const dragIndex = item.index\n            const hoverIndex = index\n            if (dragIndex === hoverIndex) {\n                return\n            }\n            const hoverBoundingRect = ref.current?.getBoundingClientRect()\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n            const clientOffset = monitor.getClientOffset()\n            const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n                return\n            }\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n                return\n            }\n            moveCard(dragIndex, hoverIndex)\n            item.index = hoverIndex\n        },\n    })\n    const [{ isDragging }, drag] = useDrag({\n        type: ItemTypes.CARD,\n        item() {\n            return { id, index }\n        },\n        collect(monitor: any) {\n            return {\n                isDragging: monitor.isDragging(),\n            }\n        },\n    })\n\n    drag(drop(ref))\n\n    return (\n        <Row\n            id={id}\n            ref={ref}\n            className={cx(\n                \"select-none cursor-move flex with-drag\",\n                isDragging ? \"opacity-0\" : \"opacity-100\",\n            )}\n        />\n    )\n}\n","import update from 'immutability-helper'\nimport { useCallback } from \"react\"\nimport { DndItem } from \"./DndItem\"\nimport { saveItems, useItems } from \"../ItemsProvider\"\n\nimport { commonClassName } from \"../Header\"\n\nexport enum TypeOfItem {\n    income,\n    outcome,\n}\n\nexport interface Item {\n    id: string\n    type?: TypeOfItem\n    title: string\n    sum: number\n    color: string | null\n    star?: boolean\n    strike?: boolean\n}\n\nexport function Dnd() {\n    const [items, setItems] = useItems()\n\n    const moveCard = useCallback(function (dragIndex: number, hoverIndex: number) {\n        setItems(function UpdateCards(prevCards: Item[]) {\n            const res = update(prevCards, {\n                $splice: [\n                    [dragIndex, 1],\n                    [hoverIndex, 0, prevCards[dragIndex] as Item],\n                ],\n            })\n            saveItems(res)\n            return res\n        })\n    }, [setItems])\n\n    return (\n        <div className={commonClassName}>\n            {items.map(function ({ id, title, sum, color }, index) {\n                return (\n                    <DndItem key={id} index={index} id={id} moveCard={moveCard} />\n                )\n            })}\n        </div>\n    )\n}\n","import { createContext, Dispatch, PropsWithChildren, SetStateAction, useCallback, useContext, useState } from \"react\"\nimport { TypeOfItem } from \"./dnd/Dnd\"\n\ninterface TogglesInterface {\n    reorder: [boolean, Dispatch<SetStateAction<boolean>>, VoidFunction]\n    addNew: [boolean, Dispatch<SetStateAction<boolean>>, VoidFunction]\n    edit: [string | null, Dispatch<SetStateAction<string | null>>, VoidFunction]\n    sortByColors: [boolean, Dispatch<SetStateAction<boolean>>, VoidFunction]\n    sortBySum: [boolean, Dispatch<SetStateAction<boolean>>, VoidFunction]\n    sortByFavourites: [boolean, Dispatch<SetStateAction<boolean>>, VoidFunction]\n    sortByStrike: [boolean, Dispatch<SetStateAction<boolean>>, VoidFunction]\n    menu: [boolean, Dispatch<SetStateAction<boolean>>, VoidFunction]\n    type: [TypeOfItem, Dispatch<SetStateAction<TypeOfItem>>, VoidFunction]\n}\n\nexport function noop() {\n}\n\nconst defaultValue: TogglesInterface = {\n    reorder: [false, noop, noop],\n    addNew: [false, noop, noop],\n    edit: [null, noop, noop],\n    sortByColors: [false, noop, noop],\n    sortBySum: [false, noop, noop],\n    sortByFavourites: [false, noop, noop],\n    sortByStrike: [false, noop, noop],\n    menu: [false, noop, noop],\n    type: [TypeOfItem.outcome, noop, noop],\n}\n\nexport const TogglesContext = createContext<TogglesInterface>(defaultValue)\n\nfunction getToggles(defaultValue: object = {}) {\n    return JSON.parse(localStorage.getItem(\"toggles\") || JSON.stringify(defaultValue))\n}\n\nexport function saveToggles(value: Partial<Record<keyof TogglesInterface, any>>) {\n    localStorage.setItem(\"toggles\", JSON.stringify({ ...getToggles(), ...value }))\n}\n\nexport function TogglesProvider({ children }: PropsWithChildren) {\n    const saved: Record<keyof TogglesInterface, boolean> = getToggles({\n        sortByColors: defaultValue.sortByColors[0],\n        sortBySum: defaultValue.sortBySum[0],\n        sortByFavourites: defaultValue.sortByFavourites[0],\n        sortByStrike: defaultValue.sortByStrike[0],\n        menu: defaultValue.menu[0],\n        type: defaultValue.type[0],\n    })\n\n    const [reorder, setReorder] = useState(defaultValue.reorder[0])\n    const [addNew, setAddNew] = useState(defaultValue.addNew[0])\n    const [edit, setEdit] = useState(defaultValue.edit[0])\n    const [sortByColors, setSortByColors] = useState(saved.sortByColors)\n    const [sortBySum, setSortBySum] = useState(saved.sortBySum)\n    const [sortByFavourites, setSortByFavourites] = useState(saved.sortByFavourites)\n    const [sortByStrike, setSortByStrike] = useState(saved.sortByStrike)\n    const [menu, setMenu] = useState(saved.menu)\n    const [type, setType] = useState(saved.type as never as TypeOfItem)\n\n    const value: TogglesInterface = {\n        reorder: [reorder, setReorder, useCallback(function () {\n            setReorder(function (prevState) {\n                return !prevState\n            })\n        }, [setReorder])],\n        addNew: [addNew, setAddNew, useCallback(function () {\n            setAddNew(function (prevState) {\n                return !prevState\n            })\n        }, [setAddNew])],\n        edit: [\n            edit,\n            setEdit,\n            useCallback(noop, []),\n        ],\n        sortByColors: [\n            sortByColors,\n            setSortByColors,\n            useCallback(function () {\n                setSortByColors(function (prevState) {\n                    setSortBySum(false)\n                    setSortByFavourites(false)\n                    setSortByStrike(false)\n                    saveToggles({\n                        sortByColors: !prevState,\n                        sortBySum: false,\n                        sortByFavourites: false,\n                        sortByStrike: false,\n                    })\n                    return !prevState\n                })\n            }, [setSortByColors, setSortBySum, setSortByFavourites, setSortByStrike]),\n        ],\n        sortBySum: [\n            sortBySum,\n            setSortBySum,\n            useCallback(function () {\n                setSortBySum(function (prevState) {\n                    setSortByColors(false)\n                    setSortByFavourites(false)\n                    setSortByStrike(false)\n                    saveToggles({\n                        sortBySum: !prevState,\n                        sortByColors: false,\n                        sortByFavourites: false,\n                        sortByStrike: false,\n                    })\n                    return !prevState\n                })\n            }, [setSortByColors, setSortBySum, setSortByFavourites, setSortByStrike]),\n        ],\n        sortByFavourites: [\n            sortByFavourites,\n            setSortByFavourites,\n            useCallback(function () {\n                setSortByFavourites(function (prevState) {\n                    setSortByColors(false)\n                    setSortBySum(false)\n                    setSortByStrike(false)\n                    saveToggles({\n                        sortByFavourites: !prevState,\n                        sortBySum: false,\n                        sortByColors: false,\n                        sortByStrike: false,\n                    })\n                    return !prevState\n                })\n            }, [setSortByColors, setSortBySum, setSortByFavourites, setSortByStrike]),\n        ],\n        sortByStrike: [\n            sortByStrike,\n            setSortByStrike,\n            useCallback(function () {\n                setSortByStrike(function (prevState) {\n                    setSortByColors(false)\n                    setSortBySum(false)\n                    setSortByFavourites(false)\n                    saveToggles({\n                        sortByStrike: !prevState,\n                        sortByFavourites: false,\n                        sortBySum: false,\n                        sortByColors: false,\n                    })\n                    return !prevState\n                })\n            }, [setSortByColors, setSortBySum, setSortByFavourites, setSortByStrike]),\n        ],\n        menu: [\n            menu,\n            setMenu,\n            useCallback(function () {\n                setMenu(function (prevState) {\n                    saveToggles({ menu: !prevState })\n                    return !prevState\n                })\n            }, [setMenu]),\n        ],\n        type: [\n            type,\n            setType,\n            useCallback(function () {\n                setType(function (prevState) {\n                    return prevState === TypeOfItem.outcome ? TypeOfItem.income : TypeOfItem.outcome\n                })\n            }, [setType]),\n        ],\n    }\n\n    return (\n        <TogglesContext.Provider value={value}>\n            {children}\n        </TogglesContext.Provider>\n    )\n}\n\nexport function useToggles(toggle: keyof TogglesInterface) {\n    return useContext(TogglesContext)[toggle]\n}\n\nexport function useToggle(toggle: keyof TogglesInterface) {\n    return useContext(TogglesContext)[toggle][0]\n}\n\nexport function useToggleValues() {\n    const toggles = useContext(TogglesContext)\n    const res: any = {}\n    Object.keys(toggles).map(function (_key) {\n        const key = _key as keyof TogglesInterface\n        res[key] = toggles[key][0]\n        return key\n    })\n    return res as Record<keyof TogglesInterface, string | null | boolean>\n}\n","import { SwipeAction } from \"react-swipeable-list\"\nimport { useCallback } from \"react\"\nimport { Item as ItemType } from \"../dnd/Dnd\"\nimport { saveItems, useItems } from \"../ItemsProvider\"\n\ninterface DeleteButtonProps {\n    id: string\n}\n\nexport function DeleteButton({ id: itemId }: DeleteButtonProps) {\n    const [, setItems] = useItems()\n    const onClick = useCallback(function () {\n        setItems(function (prevState) {\n            const copy: ItemType[] = JSON.parse(JSON.stringify(prevState))\n            const index = copy.findIndex(function ({ id }) {\n                return id === itemId\n            })\n            copy.splice(index, 1)\n            saveItems(copy)\n            return copy\n        })\n    }, [setItems, itemId])\n\n    return (\n        <SwipeAction destructive={true} onClick={onClick} Tag=\"div\">\n            <button className=\"bg-red-500 text-white font-bold px-2\">\n                Удалить\n            </button>\n        </SwipeAction>\n    )\n}\n","import cx from \"../../helpers/cx\"\nimport { SwipeAction } from \"react-swipeable-list\"\nimport { Dispatch, SetStateAction, useCallback } from \"react\"\nimport { useToggles } from \"../TogglesProvider\"\n\ninterface EditButtonProps {\n    id: string\n}\n\nexport function EditButton({ id: itemId }: EditButtonProps) {\n    const [, setEdit] = useToggles(\"edit\")\n\n    const onClick = useCallback(function () {\n        (setEdit as Dispatch<SetStateAction<string | null>>)(function () {\n            return itemId\n        })\n    }, [setEdit, itemId])\n\n    return (\n        <SwipeAction onClick={onClick} Tag=\"div\">\n            <button className={cx(\n                \"bg-blue-500 text-white font-bold\",\n                \"px-2\",\n            )}>\n                Редак.\n            </button>\n        </SwipeAction>\n    )\n}\n","import { useCallback } from \"react\"\nimport { SwipeAction } from \"react-swipeable-list\"\nimport cx from \"../../helpers/cx\"\nimport { saveItems, useItem, useItems } from \"../ItemsProvider\"\nimport { Item as ItemType } from \"../dnd/Dnd\"\n\ninterface FavouriteButtonProps {\n    id: string\n}\n\nexport function FavouriteButton({ id: itemId }: FavouriteButtonProps) {\n    const [, setItems] = useItems()\n    const { star } = useItem(itemId)\n\n    const onClick = useCallback(function () {\n        setItems(function (prevState) {\n            const copy: ItemType[] = JSON.parse(JSON.stringify(prevState))\n            const index = copy.findIndex(function ({ id }) {\n                return id === itemId\n            })\n            copy[index].star = !copy[index].star\n            saveItems(copy)\n            return copy\n        })\n    }, [setItems, itemId])\n\n    return (\n        <SwipeAction Tag=\"div\" onClick={onClick}>\n            <button\n                className={cx(\n                    \"!h-full bg-yellow-300 dark:bg-yellow-800 before:!top-0\",\n                    \"icon\",\n                    star ? \"star\" : \"star-empty\",\n                )}\n            >\n                Избранное\n            </button>\n        </SwipeAction>\n    )\n}\n","import { SwipeAction } from \"react-swipeable-list\"\nimport { useCallback } from \"react\"\nimport { saveItems, useItems } from \"../ItemsProvider\"\nimport { Item as ItemType } from \"../dnd/Dnd\"\n\ninterface StrikeButtonProps {\n    id: string\n}\n\nexport function StrikeButton({ id: itemId }: StrikeButtonProps) {\n    const [, save] = useItems()\n\n    const onClick = useCallback(function () {\n        save(function (prevState) {\n            const copy: ItemType[] = JSON.parse(JSON.stringify(prevState))\n            const index = copy.findIndex(function ({ id }) {\n                return id === itemId\n            })\n            copy[index].strike = !copy[index].strike\n            saveItems(copy)\n            return copy\n        })\n    }, [save, itemId])\n\n    return (\n        <SwipeAction Tag=\"div\" onClick={onClick}>\n            <button className=\"!h-full bg-red-200 dark:bg-red-800 before:!top-0 icon strike w-24\">\n                Зачеркнуть\n            </button>\n        </SwipeAction>\n    )\n}\n","import { FormEvent, useCallback, useState } from \"react\"\nimport { makeId } from \"../helpers/makeId\"\nimport cx from \"../helpers/cx\"\nimport { commonClassName } from \"./Header\"\nimport { DataItem } from \"../helpers/fetch\"\nimport { useToggle } from \"./TogglesProvider\"\nimport { TypeOfItem } from \"./dnd/Dnd\"\n\ninterface DefaultValues {\n    title: string\n    sum: number\n    color: string | null\n    star?: boolean\n    strike?: boolean\n}\n\ninterface AddFormProps {\n    setData(item: DataItem): void\n    onCancel?(): void\n    defaultValues?: DefaultValues\n}\n\nconst colors = [\n    null,\n    \"after:bg-red-500\",\n    \"after:bg-blue-500\",\n    \"after:bg-green-500\",\n    \"after:bg-yellow-500\",\n]\n\nexport function Form({ setData, onCancel, defaultValues }: AddFormProps) {\n    const type = useToggle(\"type\")\n\n    const [{ title, sum, color, strike, star }, setTempData] = useState<DefaultValues>({\n        title: defaultValues?.title || \"\",\n        sum: defaultValues?.sum || 0,\n        color: defaultValues?.color || null,\n        star: defaultValues?.star || false,\n        strike: defaultValues?.strike || false,\n    })\n\n    const onSubmit = useCallback(function OnSubmit(e: FormEvent<HTMLFormElement>) {\n        e.preventDefault()\n        setData({ id: makeId(), title, sum, color, star, strike })\n    }, [title, sum, setData, color, star, strike])\n\n    const bgClassName = type === TypeOfItem.income\n        ? \"bg-[var(--form-background-income)]\"\n        : \"bg-[var(--form-background-outcome)]\"\n\n    return (\n        <>\n            <div className={cx(\n                \"px-5 pt-3 flex gap-3\",\n                bgClassName,\n                commonClassName,\n                defaultValues ? \"\" : \"rounded-t mt-2\",\n            )}>\n                {colors.map(function (colorBg, index) {\n                    return (\n                        <button\n                            key={index}\n                            onClick={function () {\n                                setTempData(function (prevState) {\n                                    return { ...prevState, color: colorBg }\n                                })\n                            }}\n                            className={cx(\n                                \"w-10 h-10 relative rounded\",\n                                \"after:absolute after:inset-0 after:rounded\",\n                                color === colorBg && \"outline outline-2\",\n                                colorBg ? colorBg : cx(\n                                    \"bg-center bg-no-repeat\",\n                                    \"bg-[url('../public/assets/cancel.svg')]\",\n                                    \"dark:bg-[url('../public/assets/cancel-dark.svg')]\",\n                                ),\n                            )}\n                        />\n                    )\n                })}\n                <button\n                    className={cx(\n                        \"ml-auto\",\n                        \"w-10 h-10\",\n                        \"icon strike\",\n                        \"before:w-2/3 before:h-full before:top-0\",\n                        \"rounded\",\n                        strike && \"outline\",\n                    )}\n                    onClick={function () {\n                        setTempData(function (prevState) {\n                            return { ...prevState, strike: !prevState.strike }\n                        })\n                    }}\n                />\n                <button\n                    className={cx(\n                        \"w-10 h-10\",\n                        \"icon\",\n                        star ? \"star-yellow\" : \"star-empty\",\n                        \"before:w-2/3 before:h-full before:top-0\",\n                    )}\n                    onClick={function () {\n                        setTempData(function (prevState) {\n                            return { ...prevState, star: !prevState.star }\n                        })\n                    }}\n                />\n            </div>\n            <form\n                onSubmit={onSubmit}\n                className={cx(\n                    \"grid grid-cols-2\",\n                    \"md:flex md:justify-end md:flex-row\",\n                    \"p-5 gap-3\",\n                    commonClassName,\n                    bgClassName,\n                    \"rounded-b mb-2\",\n                )}\n            >\n                <input type=\"text\" className=\"input col-span-2\" placeholder=\"название\"\n                    autoFocus\n                    required\n                    defaultValue={title}\n                    onChange={function (e) {\n                        setTempData(function (prevState) {\n                            return { ...prevState, title: e.target.value }\n                        })\n                    }}\n                />\n                <input type=\"number\" className=\"input col-span-2\" placeholder=\"сумма\"\n                    min={0.00}\n                    step={0.01}\n                    max={100000.00}\n                    defaultValue={sum}\n                    onChange={function (e) {\n                        setTempData(function (prevState) {\n                            return { ...prevState, sum: Number(e.target.value) }\n                        })\n                    }}\n                />\n                <button type=\"submit\" className=\"button order-2 md:order-1\">\n                    {defaultValues ? \"Сохранить\" : \"Добавить\"}\n                </button>\n                {onCancel ? (\n                    <button type=\"button\" className=\"order-1 md:order-2\" onClick={onCancel}>\n                        Отмена\n                    </button>\n                ) : (\n                    <div className=\"order-1 md:order-2\" />\n                )}\n            </form>\n        </>\n    )\n}\n","export function makeId(): string {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n        const r = Math.random() * 16 | 0\n        // eslint-disable-next-line\n        const v = c == 'x' ? r : (r & 0x3 | 0x8)\n        return v.toString(16)\n    })\n}\n","import { Form } from \"../Form\"\nimport { Item as ItemType } from \"../dnd/Dnd\"\nimport { saveItems, useItem, useItems } from \"../ItemsProvider\"\nimport { useToggles } from \"../TogglesProvider\"\nimport { useCallback } from \"react\"\nimport { DataItem } from \"../../helpers/fetch\"\n\ninterface EditFormProps {\n    id: string\n}\n\nexport function EditForm({ id: itemId }: EditFormProps) {\n    const { title, sum, color, strike, star } = useItem(itemId)\n    const [, setEdit] = useToggles(\"edit\")\n    const [, save] = useItems()\n    const setData = useCallback(function (newData: DataItem) {\n        save(function (prevState) {\n            const copy: ItemType[] = JSON.parse(JSON.stringify(prevState))\n            const index = copy.findIndex(function ({ id }) {\n                return id === itemId\n            })\n            copy[index] = {\n                ...copy[index],\n                title: newData.title,\n                sum: newData.sum,\n                color: newData.color,\n                strike: newData.strike,\n                star: newData.star,\n            }\n            saveItems(copy)\n            return copy\n        })\n        // @ts-ignore\n        setEdit(null)\n    }, [save, itemId, setEdit])\n\n    return (\n        <Form\n            defaultValues={{ title, sum, color, strike, star }}\n            setData={setData}\n            onCancel={function () {\n                // @ts-ignore\n                setEdit(null)\n            }}\n        />\n    )\n}\n","import { LeadingActions, SwipeableListItem, TrailingActions } from \"react-swipeable-list\"\nimport { DeleteButton } from \"../buttons/DeleteButton\"\nimport { Row } from \"../Row\"\nimport cx from \"../../helpers/cx\"\nimport { EditButton } from \"../buttons/EditButton\"\nimport { useToggleValues } from \"../TogglesProvider\"\nimport { FavouriteButton } from \"../buttons/FavouriteButton\"\nimport { StrikeButton } from \"../buttons/StrikeButton\"\nimport { EditForm } from \"./EditForm\"\nimport { TypeOfItem } from \"../dnd/Dnd\"\n\ninterface ItemProps {\n    itemId: string\n}\n\nexport function SwipeItem({ itemId, ...props }: ItemProps) {\n    const { edit: editId, type } = useToggleValues()\n\n    return (\n        <>\n            <SwipeableListItem\n                {...props}\n                maxSwipe={10}\n                leadingActions={\n                    <LeadingActions>\n                        <FavouriteButton id={itemId} />\n                        <StrikeButton id={itemId} />\n                    </LeadingActions>\n                }\n                trailingActions={\n                    <TrailingActions>\n                        <EditButton id={itemId} />\n                        <DeleteButton id={itemId} />\n                    </TrailingActions>\n                }\n            >\n                <Row\n                    id={itemId}\n                    className={cx(\"select-none\",\n                        editId === itemId && cx(\n                            \"bg-[var(--form-background)] mt-2 rounded-t border-t-0\",\n                            (type as never as TypeOfItem) === TypeOfItem.income\n                                ? \"bg-[var(--form-background-income)]\"\n                                : \"bg-[var(--form-background-outcome)]\",\n                        ),\n                    )}\n                />\n            </SwipeableListItem>\n            {editId === itemId && (\n                <EditForm id={itemId} />\n            )}\n        </>\n    )\n}\n","import { SwipeableList, Type } from 'react-swipeable-list'\nimport 'react-swipeable-list/dist/styles.css'\nimport { useItems } from \"../ItemsProvider\"\nimport { SwipeItem } from './SwipeItem'\nimport { commonClassName } from \"../Header\"\nimport { useToggleValues } from '../TogglesProvider'\n\nexport function Swipe() {\n    const [items] = useItems()\n    const { addNew, sortByFavourites } = useToggleValues()\n\n    if (items.length === 0 && !addNew) {\n        return (\n            <div className=\"text-center py-4\">\n                {sortByFavourites ? (\n                    <div className=\"icon star-yellow mx-auto whitespace-nowrap\">\n                        в избранном ничего нет\n                    </div>\n                ) : (\n                    <>пусто</>\n                )}\n            </div>\n        )\n    }\n\n    return (\n        <SwipeableList type={Type.IOS} className={commonClassName}>\n            {items.map(function ({ id }) {\n                return (\n                    <SwipeItem key={id} itemId={id} />\n                )\n            })}\n        </SwipeableList>\n    )\n}\n","import cx from \"../helpers/cx\"\nimport { useItems } from \"./ItemsProvider\"\nimport { commonClassName } from \"./Header\"\nimport { sumDecorator } from \"../helpers/sumDecorator\"\nimport { useMemo } from \"react\"\nimport { TypeOfItem } from \"./dnd/Dnd\"\n\nexport function Footer() {\n    const [items] = useItems(\"all\")\n\n    const [outcome, income] = useMemo(function () {\n        return items.reduce(function (prev, { type, sum }) {\n            if (type === TypeOfItem.outcome) {\n                prev[0] = prev[0] + sum\n            }\n            if (type === TypeOfItem.income) {\n                prev[1] = prev[1] + sum\n            }\n            return prev\n        }, [0, 0])\n    }, [items])\n\n    return (\n        <footer className={cx(\n            \"relative\",\n            commonClassName,\n            \"border-t-4 border-[var(--line-color)]\",\n            \"bg-[var(--background-color-alt)]\",\n            \"sticky bottom-0\",\n        )}>\n            <div className=\"flex w-full pl-7 pr-2 py-2\">\n                <div className=\"text-xl flex items-center\">\n                    Доходы:\n                </div>\n                <code className=\"flex-1 text-xl text-right\">\n                    {sumDecorator(income)}\n                </code>\n            </div>\n            <div className=\"flex border-t border-[var(--line-color)] w-full pl-7 pr-2 py-2\">\n                <div className=\"text-xl flex items-center\">\n                    Расходы:\n                </div>\n                <code className=\"flex-1 text-xl text-right\">\n                    {sumDecorator(outcome)}\n                </code>\n            </div>\n            <div className=\"flex border-t border-[var(--line-color)] w-full pl-7 pr-2 py-2\">\n                <div className=\"text-xl flex items-center\">\n                </div>\n                <code className=\"flex-1 text-xl text-right\">\n                    {sumDecorator(income - outcome)}\n                </code>\n            </div>\n        </footer>\n    )\n}\n","import { useToggles, useToggleValues } from \"../TogglesProvider\"\nimport { useItems } from \"../ItemsProvider\"\nimport cx from \"../../helpers/cx\"\n\nexport function ReorderButton() {\n    const [items] = useItems()\n    const [reorder, , toggle] = useToggles(\"reorder\")\n    const { sortByColors, sortBySum, addNew, edit, sortByFavourites, sortByStrike } = useToggleValues()\n\n    return (\n        <button\n            disabled={items.length <= 1 || !!sortByColors || !!sortBySum || !!addNew || !!edit || !!sortByFavourites || !!sortByStrike}\n            className={cx(\"icon\", reorder ? \"confirm\" : \"reorder\")}\n            onClick={toggle}\n        >\n            {reorder ? \"Готово\" : \"Редак.\"}\n        </button>\n    )\n}\n","import { useToggles } from \"../TogglesProvider\"\nimport cx from \"../../helpers/cx\"\nimport { useItems } from \"../ItemsProvider\"\n\nexport function AddItemButton() {\n    const [items] = useItems()\n    const [addNew, , toggle] = useToggles(\"addNew\")\n\n    return (\n        <button\n            disabled={items.length <= 0}\n            className={cx(\"icon\", addNew ? \"cancel\" : \"add\")}\n            onClick={toggle}\n        >\n            {addNew ? \"Отмена\" : \"Новый\"}\n        </button>\n    )\n}\n","import cx from \"../../helpers/cx\"\nimport { useToggles } from \"../TogglesProvider\"\n\nexport const selected = \"shadow-inner bg-[var(--background-color-alt)]\"\n\nexport function SortByColorsButton() {\n    const [sortByColors, , toggleSortByColors] = useToggles(\"sortByColors\")\n\n    return (\n        <button\n            className={cx(\"rounded icon sort2\", !!sortByColors && selected)}\n            onClick={toggleSortByColors}\n        >\n            Цвета\n        </button>\n    )\n}\n","import cx from \"../../helpers/cx\"\nimport { useToggles } from \"../TogglesProvider\"\nimport { selected } from \"./SortByColorsButton\"\n\nexport function SortBySumButton() {\n    const [value, , toggle] = useToggles(\"sortBySum\")\n\n    return (\n        <button\n            className={cx(\"rounded icon sort1\", !!value && selected)}\n            onClick={toggle}\n        >\n            Сум.\n        </button>\n    )\n}\n","import cx from \"../../helpers/cx\"\nimport { selected } from \"./SortByColorsButton\"\nimport { useToggles } from \"../TogglesProvider\"\n\n\nexport function SortByFavouritesButton() {\n    const [value, , toggle] = useToggles(\"sortByFavourites\")\n\n    return (\n        <button\n            className={cx(\"rounded icon star\", !!value && selected)}\n            onClick={toggle}\n        >\n            Избр.\n        </button>\n    )\n}\n","import cx from \"../../helpers/cx\"\nimport { selected } from \"./SortByColorsButton\"\nimport { useToggles } from \"../TogglesProvider\"\n\nexport function SortByStrikeButton() {\n    const [value, , toggle] = useToggles(\"sortByStrike\")\n\n    return (\n        <button\n            className={cx(\"rounded icon strike ml-auto\", !!value && selected)}\n            onClick={toggle}\n        >\n            Зачерк.\n        </button>\n    )\n}\n","import cx from \"../helpers/cx\"\nimport { ReorderButton } from \"./buttons/ReorderButton\"\nimport { AddItemButton } from \"./buttons/AddItemButton\"\nimport { commonClassName } from \"./Header\"\nimport { SortByColorsButton } from \"./buttons/SortByColorsButton\"\nimport { SortBySumButton } from \"./buttons/SortBySumButton\"\nimport { SortByFavouritesButton } from \"./buttons/SortByFavouritesButton\"\nimport { SortByStrikeButton } from \"./buttons/SortByStrikeButton\"\nimport { useToggle } from \"./TogglesProvider\"\n\nexport function ActionsPanelRenderer() {\n    const menu = useToggle(\"menu\")\n\n    return (\n        <div className={cx(\n            \"overflow-hidden transition-[height] flex\",\n            commonClassName,\n            \"sticky top-14 bg-[var(--background-color)] shadow z-20\",\n            menu ? \"h-20 py-3\" : \"h-0\",\n        )}>\n            {menu && (\n                <ActionsPanel />\n            )}\n        </div>\n    )\n}\n\nfunction ActionsPanel() {\n    return (\n        <>\n            <AddItemButton />\n            <ReorderButton />\n            <SortByStrikeButton />\n            <SortByFavouritesButton />\n            <SortByColorsButton />\n            <SortBySumButton />\n        </>\n    )\n}\n","import { Form } from \"./Form\"\nimport { saveItems, useItems } from \"./ItemsProvider\"\nimport { useToggles, useToggleValues } from \"./TogglesProvider\"\nimport { TypeOfItem } from \"./dnd/Dnd\"\n\nexport function AddForm() {\n    const [items, setItems] = useItems()\n    const [addNew, setAddNew, toggle] = useToggles(\"addNew\")\n    const { type, sortByFavourites, sortByStrike } = useToggleValues()\n\n    return (\n        <>\n            {(addNew || items.length <= 0) && !sortByFavourites && !sortByStrike && (\n                <Form\n                    setData={function (item) {\n                        setItems(function (prevState) {\n                            item.type = type as never as TypeOfItem\n                            const res = [...prevState, item]\n                            saveItems(res)\n                            setAddNew(false as any)\n                            return res\n                        })\n                    }}\n                    {...items.length <= 0 ? {} : {\n                        onCancel: toggle,\n                    }}\n                />\n            )}\n        </>\n    )\n}\n","import { saveToggles, useToggle, useToggles } from \"./TogglesProvider\"\nimport cx from \"../helpers/cx\"\nimport { TypeOfItem } from \"./dnd/Dnd\"\nimport { commonClassName } from \"./Header\"\n\nfunction Tab({ typeOfItem, title }: { typeOfItem: TypeOfItem, title: string }) {\n    const [type, setType] = useToggles(\"type\")\n\n    return (\n        <button\n            onClick={function () {\n                setType(typeOfItem as any)\n                saveToggles({ type: typeOfItem })\n            }}\n            className={cx(\"w-1/2 py-3\",\n                type === typeOfItem && \"bg-[var(--background-color-alt)] font-bold\",\n            )}\n        >\n            {title}\n        </button>\n    )\n}\n\nexport function Tabs() {\n    const menu = useToggle(\"menu\")\n\n    return (\n        <div className={cx(\"flex sticky z-10\",\n            \"bg-[var(--background-color)]\",\n            menu ? \"top-[136px]\" : \"top-14\",\n            commonClassName,\n        )}>\n            <Tab title=\"Расходы\" typeOfItem={TypeOfItem.outcome} />\n            <Tab title=\"Доходы\" typeOfItem={TypeOfItem.income} />\n        </div>\n    )\n}\n","import cx from \"../../helpers/cx\"\nimport { useToggles } from \"../TogglesProvider\"\n\nexport function MenuButton() {\n    const [menu, , toggle] = useToggles(\"menu\")\n\n    return (\n        <button onClick={toggle} className={cx(\n            \"absolute left-0 top-0 bottom-0 !p-0 !m-0\",\n            \"icon\",\n            menu ? \"cancel\" : \"menu\",\n            \"before:top-0 before:bottom-0 before:h-auto\",\n            // \"before:w-1/2\",\n        )} />\n    )\n}\n","import { Header } from \"./Header\"\nimport { DndProvider } from \"react-dnd\"\nimport { HTML5Backend } from \"react-dnd-html5-backend\"\nimport { Dnd } from \"./dnd/Dnd\"\nimport { Swipe } from \"./swipe/Swipe\"\nimport { Footer } from \"./Footer\"\nimport { useToggle } from \"./TogglesProvider\"\nimport { ActionsPanelRenderer } from \"./ActionsPanel\"\nimport { AddForm } from \"./AddForm\"\nimport { Tabs } from \"./Tabs\"\nimport { MenuButton } from './buttons/MenuButton';\n\n// useEffect(() => {\n//     setLoading(true)\n//     try {\n//         ;(async () => {\n//             const data = await fetch()\n//             setData(data)\n//             setLoading(false)\n//         })()\n//     } catch (e) {\n//         console.log(\"CATCH\", e)\n//     }\n// }, [setData, setLoading])\n\nexport function App() {\n    const reorder = useToggle(\"reorder\")\n\n    return (\n        <>\n            <Header>\n                <MenuButton />\n            </Header>\n            <ActionsPanelRenderer />\n            <Tabs />\n            <div className=\"h-5\" />\n            <AddForm />\n            {reorder ? (\n                <DndProvider backend={HTML5Backend}>\n                    <Dnd />\n                </DndProvider>\n            ) : (\n                <Swipe />\n            )}\n            <div className=\"h-5\" />\n            <Footer />\n        </>\n    )\n}\n","import { TogglesProvider } from './TogglesProvider';\nimport { ItemsProvider } from './ItemsProvider';\nimport { App } from \"./App\"\n\nexport default function AppWithProviders() {\n  return (\n    <TogglesProvider>\n      <ItemsProvider>\n        <App />\n      </ItemsProvider>\n    </TogglesProvider>\n  )\n}"],"names":["moneySymbol","sumDecorator","value","_value$toFixed$split","toFixed","split","_value$toFixed$split2","_slicedToArray","a","b","_jsxs","_Fragment","children","_jsx","ItemsContext","createContext","noop","ItemsProvider","_ref","useEffect","console","log","Provider","useState","JSON","parse","concat","localStorage","getItem","useItems","flag","_useContext","useContext","_useContext2","items","setItems","_useToggleValues","useToggleValues","type","sortByColors","sortBySum","sortByFavourites","sortByStrike","typeOfItem","resultItems","filter","_ref2","Array","from","list","keyGetter","map","Map","forEach","item","key","collection","get","push","set","groupBy","color","_ref3","flat","sort","sum","star","strike","useItem","id","find","_ref5","itemId","saveItems","setItem","stringify","Row","forwardRef","ref","className","_useItem","title","cx","ItemTypes","CARD","DndItem","index","moveCard","useRef","_useDrop","useDrop","accept","collect","monitor","handlerId","getHandlerId","hover","_ref$current","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","_useDrag","useDrag","isDragging","_useDrag2","drag","TypeOfItem","Dnd","_useItems","_useItems2","useCallback","prevCards","res","update","$splice","commonClassName","defaultValue","reorder","addNew","edit","menu","outcome","TogglesContext","getToggles","arguments","length","undefined","saveToggles","_objectSpread","TogglesProvider","saved","_useState","_useState2","setReorder","_useState3","_useState4","setAddNew","_useState5","_useState6","setEdit","_useState7","_useState8","setSortByColors","_useState9","_useState10","setSortBySum","_useState11","_useState12","setSortByFavourites","_useState13","_useState14","setSortByStrike","_useState15","_useState16","setMenu","_useState17","_useState18","setType","prevState","income","useToggles","toggle","useToggle","toggles","Object","keys","_key","DeleteButton","onClick","copy","findIndex","splice","SwipeAction","destructive","Tag","EditButton","_useToggles","FavouriteButton","StrikeButton","save","colors","Form","setData","onCancel","defaultValues","_useState2$","setTempData","onSubmit","e","preventDefault","replace","c","r","Math","random","toString","bgClassName","colorBg","placeholder","autoFocus","required","onChange","target","min","step","max","Number","EditForm","newData","SwipeItem","props","_objectWithoutProperties","_excluded","editId","SwipeableListItem","maxSwipe","leadingActions","LeadingActions","trailingActions","TrailingActions","Swipe","SwipeableList","Type","IOS","Footer","_useMemo","useMemo","reduce","prev","_useMemo2","ReorderButton","_useToggles2","disabled","AddItemButton","selected","SortByColorsButton","toggleSortByColors","SortBySumButton","SortByFavouritesButton","SortByStrikeButton","ActionsPanelRenderer","ActionsPanel","AddForm","_toConsumableArray","Tab","Tabs","MenuButton","App","Header","DndProvider","backend","HTML5Backend","AppWithProviders"],"sourceRoot":""}